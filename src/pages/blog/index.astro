---
import Base from "../../layouts/main.astro";

import { getRelativeLocaleUrl } from "astro:i18n";
import { Image, Picture } from "astro:assets";
import { getCollection } from "astro:content";
import { ClassNameValue, twMerge } from "tailwind-merge";
const posts = (await getCollection("en")).sort(
  (a, b) => b.data.sorting - a.data.sorting,
);
const locale = Astro.currentLocale;

const latestPost = posts.shift();

const postImages = import.meta.glob(
  "/src/assets/blog/**/*.{jpeg,jpg,png,gif,webp}",
);

const colorArray: {
  circleColor: ClassNameValue;
  border: ClassNameValue;
}[] = [
  { circleColor: "bg-blue-300", border: "border-blue-300" },
  { circleColor: "bg-green-300", border: "border-green-300" },
  { circleColor: "bg-yellow-300", border: "border-yellow-300" },
  { circleColor: "bg-red-300", border: "border-red-300" },
  { circleColor: "bg-indigo-300", border: "border-indigo-300" },
  { circleColor: "bg-purple-300", border: "border-purple-300" },
  { circleColor: "bg-pink-300", border: "border-pink-300" },
  { circleColor: "bg-fuchsia-300", border: "border-fuchsia-300" },
];
---

<Base
  title="Blog posts"
  openGraphTitle="My blog posts"
  description="I will share what I see happening, some programming tips, and a bit of my perspective on the world."
>
  <p class="py-6 text-2xl font-bold md:text-3xl">Posts</p>
  <p class="pb-4 text-gray-300">
    I will share what I see happening, some programming tips, and a
    bit of my perspective on the world.
  </p>

  <a href={getRelativeLocaleUrl(locale, `/blog/${latestPost.slug}`)}>
    <div
      class="flex flex-col rounded-lg border-2 border-gray-600 bg-gray-800 transition-colors duration-200 hover:border-gray-400 md:flex-row"
      transition:name={latestPost.data.title}
    >
      <div class="md:basis-5/12">
        <Image
          src={postImages[latestPost.data.image]()}
          alt={`Cover for post ${latestPost.data.title}, read this post for more information`}
          densities={[1, 1.5, 2, 2.5]}
          class="h-80 rounded-tl-md rounded-tr-md object-cover md:rounded-bl-md md:rounded-tr-none"
          transition:name={latestPost.data.title + "i"}
        />
      </div>
      <div class="flex flex-col px-6 py-8 md:basis-7/12">
        <p class="text-md pb-2 text-gray-300/85 md:text-lg">
          Latest Post:
        </p>
        <p
          class="pb-3 text-2xl font-bold md:text-3xl"
          transition:name={latestPost.data.title + "t"}
        >
          {latestPost.data.title}
        </p>
        <p
          class="text-md md:text-lg"
          transition:name={latestPost.data.title + "d"}
        >
          {latestPost.data.description}
        </p>

        <div
          class="mt-auto flex space-x-3 pt-4 text-sm"
          transition:name={latestPost.data.title + "k"}
        >
          {
            latestPost.data.tags.map((tag, index) => (
              <div
                class={twMerge(
                  "flex place-items-center gap-2 rounded-md border-2 px-3 py-1",
                  colorArray[index % 8].border,
                )}
              >
                <div
                  class={twMerge(
                    "h-2 w-2 rounded-full",
                    colorArray[index % 8].circleColor,
                  )}
                />
                {tag.trim()}
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </a>

  <div
    class="mx-auto mb-2 mt-12 h-0.5 w-full rounded-full bg-gray-500"
  >
  </div>

  <p class="pt-6 text-xl text-gray-300 md:text-2xl">Older posts:</p>
  <div class="mt-6">
    {
      posts.map((item) => (
        <a
          href={getRelativeLocaleUrl(locale, `/blog/${item.slug}`)}
          transition:name={item.data.title}
          data-astro-prefetch
        >
          <div class="flex w-full flex-col rounded-md border-2 border-gray-600 bg-gray-800 duration-300 hover:border-gray-400 md:flex-row">
            <div
              class="md:basis-5/12"
              transition:name={item.data.title + "i"}
            >
              <Image
                src={postImages[item.data.image]()}
                alt={`Cover for post ${item.data.title}, read this post for more infomation`}
                densities={[1, 1.5, 2, 2.5]}
                class="h-64 rounded-tl-md rounded-tr-md object-cover md:rounded-bl-md md:rounded-tr-none"
              />
            </div>
            <div class="flex flex-col px-6 py-8 md:basis-7/12">
              <p
                class="text-xl font-bold md:text-2xl"
                transition:name={item.data.title + "t"}
              >
                {item.data.title}
              </p>
              <p
                class="text-md pt-4 md:text-lg"
                transition:name={item.data.title + "d"}
              >
                {item.data.description}
              </p>

              <div
                class="mt-auto flex space-x-3 pt-4 text-sm"
                transition:name={item.data.title + "k"}
              >
                {item.data.tags.map((tag, index) => (
                  <div
                    class={twMerge(
                      "flex place-items-center gap-2 rounded-md border-2 px-3 py-1",
                      colorArray[index % 8].border,
                    )}
                  >
                    <div
                      class={twMerge(
                        "h-2 w-2 rounded-full",
                        colorArray[index % 8].circleColor,
                      )}
                    />
                    {tag.trim()}
                  </div>
                ))}
              </div>
            </div>
          </div>
        </a>
      ))
    }
  </div>
</Base>
